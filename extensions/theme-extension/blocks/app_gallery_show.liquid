{% comment %}
  Product Gallery Block - Grid Layout Only, Responsive & Professional
{% endcomment %}

<div id="galleryflow-content-block" style="padding:5px;">
  <div id="galleryflow-images" class="galleryflow-grid" style="margin-top:20px;">
    <div style="width:100%; text-align:center; padding:20px;"><div class="galleryflow-loader"></div></div>
  </div>

  <div id="galleryflow-error" style="color:red; margin-top:10px; display:none;"></div>
</div>

<style>
  /* Loader */
  .galleryflow-loader {
    border: 12px solid #f3f3f3;
    border-top: 12px solid #3498db;
    border-radius: 50%;
    width: 80px;
    height: 80px;
    animation: spin 1.5s linear infinite;
    margin: 20px auto;
  }
  @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

  /* Grid layout */
  .galleryflow-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 15px;
    justify-items: center;
    max-width: 1200px;
    margin: auto;
  }

  /* Card container for each image */
  /* Card container for each image */
.galleryflow-card {
  width: 100%;
  position: relative;
  overflow: hidden;
  border-radius: {{ block.settings.border_radius | default: 4 }}px;
  {% if block.settings.box_shadow %}box-shadow:0 3px 10px rgba(0,0,0,0.1);{% endif %}
  transition: transform 0.3s ease;
  background: #fff;
  max-width: 300px;
  height: {{ block.settings.image_height | default:'200px' }};
  display: block; /* Ensure block layout */
}

/* Image inside card */
.galleryflow-card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  opacity: 0;
  transition: opacity 0.5s ease;
  border-radius: {{ block.settings.border_radius | default: 4 }}px;
  position: relative; /* changed from absolute */
  z-index: 1;
}

/* Loader overlay */
.galleryflow-card .loader-overlay {
  position: absolute;
  top:0; left:0; right:0; bottom:0;
  display:flex;
  justify-content:center;
  align-items:center;
  background:#fff;
  z-index: 2;
}

.galleryflow-card img.loaded { opacity: 1; }


  /* Loader overlay */
  .galleryflow-card .loader-overlay {
    position: absolute;
    top:0; left:0; right:0; bottom:0;
    display:flex;
    justify-content:center;
    align-items:center;
    background:#fff;
    z-index:2;
  }

</style>

<script>
(async function() {
  const shop = "{{ shop.permanent_domain }}";
  const urlParams = new URLSearchParams(window.location.search);
  const variantParam = urlParams.get("variant");

  const baseId = {% if product %}"{{ product.id }}"{% else %}""{% endif %};
  let contentId = baseId;
  let contentType = "product";

  const galleryDiv = document.getElementById("galleryflow-images");
  const errorDiv = document.getElementById("galleryflow-error");

  console.log("üîç Initial contentId:", contentId, "type:", contentType);

  galleryDiv.innerHTML = `<div style="width:100%; text-align:center; padding:20px;"><div class="galleryflow-loader"></div></div>`;

  try {
    const res = await fetch(`https://gauge-throw-ton-judy.trycloudflare.com/api/gallery-show?shop=${shop}&contentId=${baseId}&contentType=product`, {
      headers: { 'Accept': 'application/json' },
      mode: 'cors'
    });

    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    const data = await res.json();
    console.log("‚öôÔ∏è Gallery response:", data);

    // ‚úÖ Check if backend has fetchVariants enabled
    const fetchVariants = data.setting.fetchVaraints || false;
    console.log(data.setting,fetchVariants)

    // üîÅ Adjust type/id if fetchVariants is true
    if (fetchVariants && variantParam) {
      contentId = variantParam;
      contentType = "variant";
      console.log("‚úÖ Using variant mode:", contentId);
    } else {
      console.log("üö´ Variant mode disabled or no variant param.");
    }

    // Re-fetch the correct images for contentType
    const res2 = await fetch(`https://gauge-throw-ton-judy.trycloudflare.com/api/gallery-show?shop=${shop}&contentId=${contentId}&contentType=${contentType}`, {
      headers: { 'Accept': 'application/json' },
      mode: 'cors'
    });
    if (!res2.ok) throw new Error(`HTTP error! status: ${res2.status}`);
    const finalData = await res2.json();

    if (!finalData.approved || !finalData.images?.length)
      throw new Error(finalData.message || "No approved images");

    // Build grid cards
    galleryDiv.innerHTML = finalData.images.map(img => `
      <div class="galleryflow-card">
        <div class="loader-overlay"><div class="galleryflow-loader"></div></div>
        <img src="${img.url.startsWith('/') ? 'https://gauge-throw-ton-judy.trycloudflare.com' + img.url : img.url}" alt="${img.alt || 'Gallery image'}" loading="lazy">
      </div>`).join('');

    const images = galleryDiv.querySelectorAll('img');
    images.forEach(img => {
      if (img.complete) showImage(img);
      else img.onload = () => showImage(img);
    });

    function showImage(img) {
      img.classList.add('loaded');
      const overlay = img.previousElementSibling;
      if (overlay) overlay.remove();
    }

  } catch (err) {
    console.error("Gallery error:", err);
    galleryDiv.style.display = "none";
    errorDiv.style.display = "block";
    errorDiv.innerHTML = `Failed to load gallery: ${err.message}<button onclick="location.reload()" style="margin-left:10px;padding:5px 10px;background:#f0f0f0;border:1px solid #ccc;border-radius:4px;">Retry</button>`;
  }
})();
</script>


{% schema %}
{
  "name": "Show Gallery",
  "target": "section",
  "settings": [
    {
      "type": "range",
      "id": "border_radius",
      "label": "Border Radius (px)",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 4
    },
    {
      "type": "checkbox",
      "id": "box_shadow",
      "label": "Enable Box Shadow",
      "default": true
    },
    {
      "type": "text",
      "id": "image_height",
      "label": "Image Height (for grid/carousel)",
      "default": "200px",
      "info": "Masonry layout uses natural image heights"
    },
    {
      "type": "textarea",
      "id": "custom_css",
      "label": "Custom CSS",
      "info": "Add any custom CSS here. Use #content-gallery-block as the root selector."
    }
  ],
  "enabled_on": {
    "templates": ["product", "collection", "article", "page"]
  }
}
{% endschema %}